apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "zoneminder.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "zoneminder.name" . }}
    helm.sh/chart: {{ include "zoneminder.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "zoneminder.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "zoneminder.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - net_raw
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: http
        readinessProbe:
          tcpSocket:
            port: http
        env:
        - name: TZ
          value: "{{ .Values.tz }}"
        - name: PUID
          value: "{{ .Values.uid }}"
        - name: PGID
          value: "{{ .Values.gid }}"
        - name: ZM_DB_HOST
          value: "{{ .Values.db.host }}"
        - name: MYSQL_DATABASE
          value: "{{ .Values.db.name }}"
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.db.rootPassword }}"
        - name: MYSQL_USER
          value: "{{ .Values.db.user }}"
        - name: MYSQL_PASSWORD
          value: "{{ .Values.db.password }}"
        volumeMounts:
        - name: shm
          mountPath: /dev/shm
        - mountPath: /var/cache/zoneminder
          name: config
        - mountPath: /content
          name: content
          {{- if .Values.persistence.content.subPath }}
          subPath: {{ .Values.persistence.content.subPath }}
          {{- end }}
        - mountPath: /var/backups
          name: backups
          {{- if .Values.persistence.backups.subPath }}
          subPath: {{ .Values.persistence.backups.subPath }}
          {{- end }}

      volumes:
      - name: shm
        emptyDir:
          medium: Memory
      - name: config
        {{- if .Values.persistence.config.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.config.existingClaim }}{{ .Values.persistence.config.existingClaim }}{{- else }}{{ template "zoneminder.fullname" . }}-config{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      - name: content
        {{- if .Values.persistence.content.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.content.existingClaim }}{{ .Values.persistence.content.existingClaim }}{{- else }}{{ template "zoneminder.fullname" . }}-content{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      - name: backups
        {{- if .Values.persistence.backups.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.backups.existingClaim }}{{ .Values.persistence.backups.existingClaim }}{{- else }}{{ template "zoneminder.fullname" . }}-backups{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
